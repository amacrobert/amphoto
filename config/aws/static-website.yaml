Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: amphoto.prod
      AccessControl: PublicRead

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${WebsiteBucket}/*'
            Principal: { AWS: ['*'] }

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases: [ andrewmacrobert.com ]
        Origins:
          - DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            Id: 's3-origin'
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        PriceClass: PriceClass_100
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: 's3-origin'
          ViewerProtocolPolicy: 'redirect-to-https'
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt RewriteDefaultIndexRequest.FunctionMetadata.FunctionARN
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: all
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:078443902822:certificate/961bdb9e-f012-4ce3-820f-63b6e3c23881
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only

  RewriteDefaultIndexRequest:
    Type: AWS::CloudFront::Function
    Properties:
      Name: RewriteDefaultIndexRequest
      AutoPublish: true
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;
          if (uri.endsWith('/')) {
            request.uri += 'index.html';
          }
          else if (!uri.includes('.')) {
            request.uri += '/index.html';
          }
          return request;
        }
      FunctionConfig:
        Comment: 'Add document indexes to requests'
        Runtime: cloudfront-js-1.0
